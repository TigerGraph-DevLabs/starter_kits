CREATE QUERY key_relationship(VERTEX<Company> company, INT step) 
  FOR GRAPH EnterpriseGraph syntax v2 {
/*
    Find all key investors or leaders (CEO, VP, Director) of a company within several steps.
    
    Sample inputs:
    company: Hospice Mocha Frame | Hospice Loyalty Decongestant | 
      Psychoanalyst Purse Prior | Discipline Base Perfume
    step: 1 | 2 | 3 | 4 | 5

    Starting with the input company,
    (1) Mark as the input as visited
    (2) If the connected vertices either has a position or holding attribute, add them to the edge list and mark them as true
    (3) Union the new vertices with vertex_results (starting with the input company)
    (4) Repeat step number of times
*/

    OrAccum @visited = FALSE;
    SetAccum<EDGE> @@edge_set;

    INT loop_step;

    // limit the maximum traverse steps
    IF (step > 8) THEN
        loop_step = 8;
    ELSE
        loop_step = step;
    END;

    start (ANY) = { company };

    vertex_result = start;

    start = SELECT s
        FROM start:s
        ACCUM s.@visited = TRUE; // mark input as visited

    WHILE (TRUE) LIMIT loop_step DO
        start =	SELECT tgt
            FROM start -((WorkFor | PersonInvestCompany | 
              reverse_CompanyInvestCompany>) : e)-
              (Person | Company): tgt
            WHERE ((e.type == "WorkFor" AND (e.title == "Director" 
              OR e.title == "CEO" OR e.title == "Vice President")) OR
              e.control_type == "holding") AND tgt.@visited == FALSE
            ACCUM @@edge_set += e // add to edge set
            POST-ACCUM tgt.@visited = TRUE; // mark as visited
        vertex_result = vertex_result UNION start; // merge
    END;

    PRINT vertex_result;
    PRINT @@edge_set;
}