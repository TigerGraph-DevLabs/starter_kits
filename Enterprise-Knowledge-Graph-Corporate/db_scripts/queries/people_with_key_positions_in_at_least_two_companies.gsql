CREATE QUERY people_with_key_positions_in_at_least_two_companies() 
  FOR GRAPH EnterpriseGraph API("v2") SYNTAX v2 {
/*
    Find all the people who are a CEO, Director or Vice President in
    at least two different companies

    Starting with all people,
    (1) Find people with the title of CEO, Director, or Vice 
      President in at least two companys
    (2) Print the subgraph of the people
*/

    SetAccum<EDGE> @@works_for_company_two_set;
    SetAccum<EDGE> @@works_for_company_one_set;
    SetAccum<VERTEX<Company>> @@company_two_set;
    SetAccum<VERTEX<Person>> @@people_set;
    SetAccum<VERTEX<Company>> @@company_one_set;

    vertex_set_1 = SELECT c2
        FROM Person:p -(WorkFor:pc2)- Company:c2,
            Person:p -(WorkFor:pc1)- Company:c1
        WHERE (c2 != c1) AND // not the same company
          ((pc2.title == "CEO")  // has the specific role
          OR ((pc2.title == "Director") 
          OR (pc2.title == "Vice President"))) AND 
          ((pc2.title == "CEO") 
          OR ((pc1.title == "Director") 
          OR (pc1.title == "Vice President")))
        ACCUM @@works_for_company_two_set += pc2, // accumulate values
          @@works_for_company_one_set += pc1
        POST-ACCUM @@company_two_set += c2
        POST-ACCUM @@people_set += p
        POST-ACCUM @@company_one_set += c1;

    PRINT @@works_for_company_two_set; // print edges
    PRINT @@works_for_company_one_set;

    company_two = { @@company_two_set }; // print vertices
    PRINT company_two[
      company_two.registered_capital AS registered_capital
    ];

    people = { @@people_set };
    PRINT people[
      people.gender AS gender
    ];

    company_one = { @@company_one_set };
    PRINT company_one[
      company_one.registered_capital AS registered_capital
    ];

}
