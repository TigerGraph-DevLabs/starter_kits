CREATE QUERY company_holders(VERTEX<Company> company, UINT step) 
  FOR GRAPH EnterpriseGraph SYNTAX v1 {
/*
    Find all key investors of a company within several steps.

    Sample inputs:
    company: Hospice Mocha Frame | Hospice Loyalty Decongestant | 
      Psychoanalyst Purse Prior | Discipline Base Perfume
    step: 1 | 2 | 3 | 4 | 5

    Starting with the input company,
    (1) Find the connected people who are holders of the company
    (2) Merge the results with the vertex_results, which starts as
      the input company
    (3) Repeat for step steps
*/

    // @visited is used to mark visited vertices
    OrAccum @visited = FALSE;
    // @@edge_set is used to hold all touched edges
    SetAccum<EDGE> @@edge_set;

    INT loop_step;

    // limit the maximum traverse steps
    IF (step > 8) THEN
      loop_step = 8;
    ELSE
      loop_step = step;
    END;

    // Start from the input company
    start (ANY) = { company };

    // vertex_result contains all vertices we touched during traversal
    vertex_result = start;

    // Mark input company as visited
    start =  SELECT s
        FROM start:s
        ACCUM s.@visited = TRUE;

    // Traverse multiple steps
    WHILE (true) LIMIT loop_step DO
        /* Find the investors (either people or companies) that is a key
          investor (control_type == "holding")*/
        start =  SELECT tgt
            FROM start
                -((PersonInvestCompany | CompanyInvestCompany): e)-
                (Person | Company): tgt
            WHERE (e.control_type == "holding") AND tgt.@visited == FALSE
            ACCUM @@edge_set += e
            POST-ACCUM tgt.@visited = TRUE;
        // Merge touched vertices into the result
        vertex_result = vertex_result UNION start;
    END;

    // Print result as a graph
    PRINT vertex_result;
    PRINT @@edge_set;
}