CREATE QUERY shortest_ss_no_wt(VERTEX source, BOOL display) FOR GRAPH MyGraph SYNTAX V2 { 
 /*
   Single-Source Shortest Path without weights on edges. Calculates the shortest distance 
   from the given vertex source to all other connected vertices, and shows one shortest 
   path between them. 
   
   The JSON version also show visualization of the network. 
   The attribute version only store the distance into attribute, not the path.
   
   Sample Inputs:
   source: airport = "Goroka Airport"
   display: True | False
   
   Start from the source vertex:
   (1) Initialize local accumulators
   (2) Select connected vertices, calculates shortest distance, and gets shortest
       path 
   (3) Print results if display is True
*/

        MinAccum<int> @dis;
        OrAccum @visited;
        ListAccum<vertex> @path;
        SetAccum<edge> @@edge_Set;

  ##### Initialization  #####
        Source = {source};
        Source = SELECT s 
                 FROM Source:s
                 ACCUM s.@visited += true, 
                       s.@dis = 0,
                       s.@path = s; 
        ResultSet = {source};

  ##### Calculate distances and paths #####
        WHILE(Source.size()>0) DO
                Source = SELECT t
                         FROM Source:s -(:e)- :t
                         WHERE t.@visited == false
                         ACCUM t.@dis += s.@dis + 1,
                               t.@path = s.@path + [t],
                               t.@visited += true;
                ResultSet = ResultSet UNION Source;
        END;

  ##### Print the results #####

        PRINT ResultSet[ResultSet.@dis, ResultSet.@path];
        IF display THEN
                ResultSet = SELECT s
                            FROM ResultSet:s -(:e)- :t
                            ACCUM @@edge_Set += e;
                PRINT @@edge_Set;
        END;
}
